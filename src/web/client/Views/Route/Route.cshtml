@inherits SBSViewPage<Yojowa.StopByStop.Web.Models.RouteModel>

@{
    Layout = "~/client/Views/Shared/_NonHomeLayout.cshtml";
    var exitCount = Model.Route.RouteSegments.Sum(rs => rs.RouteJunctions.Length);
    ViewBag.Title = Model.Route.FromLocation.PlaceDescription + " to " + Model.Route.ToLocation.PlaceDescription;
    ViewBag.Description = string.Format("Traveling by car from {0} to {1} and looking for best place to stop for food or gas? This route is {2} miles and has {3} exits. Check this out. ",
        Model.Route.FromLocation.PlaceDescription,
        Model.Route.ToLocation.PlaceDescription,
        Model.Route.Distance,
        exitCount
       );
    ViewBag.PageName = "route-page";
    ViewBag.UIDescription = string.Format("Distance {0} miles. {1} exits", Model.Route.Distance, exitCount);
    ViewBag.TelemetryPageName = "Route";
}

@section BreadcrumbLinks
{
}

<!-- route -->
<div class="ui-filterable route-wrapper">
    <div class="route" data-bind="element:route.boundElement">
        <div class="route_line" data-bind="foreach: route.routeSegments">
            <div class="segment" data-bind="style: {height: height, lineHeight:height}">
                <div class="segment-name">
                                  
                    <span class="segment-instructions">
                        <span data-bind="html: instructions, attr: {title: instructionsTip}"></span>
                    </span>
                    <span class="highway-name">                    
                        <span data-bind="text: highwayNameText, attr: {title:highwayNameText}"></span>
                    </span>
                    <div class="segment-distance">
                        <span class="distance_marker" data-bind="text: distanceText"></span>
                    </div>
                </div>

                <div data-bind="foreach: routeVisibleJunctions">
                    <div class="junction-wrapper" data-bind="style: {top:top},attr:{osmid:junction.osmid}">
                        <div class="segment-distance distance-to-junction" data-bind="style:{width:hasStops()?'8em':'4em', backgroundColor:hasStops()?'lightyellow':'#fff'}">
                            @*<span class="distance_to_junction_marker" data-bind="text: distanceFromRouteStartText"></span>*@
                            <span class="time_to_junction_marker" data-bind="text: etaString"></span>
                        </div>
                        <div id="exit_marker">
                            <a data-ajax="false" href="#" class="junction" data-bind="attr:{href: '@Href("~/route/")'+$root.route.routeId+'/exit/osm-'+$data.junction.osmid}">
                                <div class="junction-name" data-bind="html: junction.ref, attr: {title:junction.name}"></div>
                            </a>
                        </div>
                        <div class="pois">
                            <a data-ajax="false" data-bind="visible:visibleGasPois().length > 0, attr:{href: '@Href("~/route/")'+$root.route.routeId+'/exit/osm-'+$data.junction.osmid+'/gas'}"
                               class="poi gas" data-type="servicestations">
                                <div style="position:relative">
                                    <div class="poi-count" data-bind="html: gasPoiCountString"></div>
                                    <div class="poi-distance-label" data-bind="html: closestGasPoiDistance"></div>
                                </div>
                            </a>
                            <a data-ajax="false" data-bind="visible:visibleFoodPois().length > 0, attr:{href: '@Href("~/route/")'+$root.route.routeId+'/exit/osm-'+$data.junction.osmid+'/food'}"
                               class="poi food" data-type="restaurants">
                                <div style="position:relative">
                                    <div class="poi-count" data-bind="html: foodPoiCountString"></div>
                                    <div class="poi-distance-label" data-bind="html: closestFoodPoiDistance"></div>
                                </div>
                            </a>
                            <div class="clear"></div>
                        </div>
                        <div class="clear"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- sidebar -->
<div style="padding-left:10px;">
    <div id="sidebar" data-bind="style:{height:route.sideBar.sideBarHeight()+'px',position:route.sideBar.sideBarPosition,top:route.sideBar.sideBarTop,bottom:route.sideBar.sideBarBottom}">


        <div class="sidebar-label sidebar-top">
            <div class="sidebar_text" data-bind="html:route.fromLocation.placeDescription">
            </div>
            <div class="route-start">
                <span data-bind="text:route.startTimeString"></span>
            </div>
        </div>

        <div id="sidebar-inner" data-bind="style:{height:route.sideBar.sideBarInnerHeight()+'px', top:route.sideBar.sideBarInnerTop()+'px'}">
            <div data-bind="foreach: route.sideBar.stops">
                <div class="sidebar-stop" data-bind="css:'poi ui-link '+ poiTypeClass+' sidebar-stop', style:{top:top,left:left}, click:click">
                    <div class="sidebar-stop-time">
                        <span data-bind="text:stop.name"></span>
                        <br />
                        <span data-bind="text:stop.etaString"></span>
                    </div>
                </div>
            </div>

            <div id="sidebar-thumb" data-bind="style:{top:route.sideBar.sideBarThumbTop, backgroundColor:route.sideBar.isDraggingThumb()? '#EB65A0':'#FFF'}"></div>
        </div>

        <div class="sidebar-label sidebar-bottom">
            <div class="route-eta">
                <span data-bind="text:route.etaString"></span>
            </div>
            <div class="sidebar_text" data-bind="html:route.toLocation.placeDescription"></div>

        </div>

    </div>
</div>

@section AboveFooter
{
    <!-- let's go button-->
    <div data-bind="visible:routePlan.stops().length>0" class="letsgo-container" style="width:100%;padding:0 5px 0px;position:absolute;width:100%; background-color:#fff;">
        <a href="#" class="ui-btn ui-btn-inline ui-corner-all"
           data-bind="click:function(){routePlan.navigate();return false;}"
           style="width:55%;margin:0 auto;display:block;background-color:#5bb12f;color:#fff;font-size:1.3em;text-transform:uppercase;padding:12px;box-shadow:1px 1px 4px #606060;"
           data-rel="back">Let's go</a>
    </div>
}
@section Scripts
{
    <script type="text/javascript">
        var routeData = @Html.Raw(RenderHelper.ToJSON(Model.Route));
        ko.applyBindings(new StopByStop.AppViewModel(routeData, StopByStop.AppState.current));
    </script>
}




